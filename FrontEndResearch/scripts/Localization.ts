/// <autogenerated>
/// This code was generated by a tool. Any changes made manually will be lost
/// the next time this code is regenerated.
/// </autogenerated>

export enum LocaleTypes {
	RuRu,
	EnUs,
}

export class CurrentLocale {
	static get locale(): LocaleTypes {
		return this.localeValue;
	}

	static setLocale(value: LocaleTypes) {
		this.localeValue = value;
	}
	private static localeValue: LocaleTypes;
}

export class ResClassTest2ResClassText {
	static get default(): string {
		switch (CurrentLocale.locale) {
			case LocaleTypes.RuRu:
				return "Это вложенный текст";
			default:
				return "";
		}
	}
	static get innerText(): string {
		switch (CurrentLocale.locale) {
			case LocaleTypes.RuRu:
				return "Это вложенный вложенный текст";
			case LocaleTypes.EnUs:
				return "This is nested nested text";
			default:
				return "";
		}
	}
}

export class ResClassTest2 {
	static get default(): string {
		switch (CurrentLocale.locale) {
			case LocaleTypes.RuRu:
				return "Тест2";
			case LocaleTypes.EnUs:
				return "TEst2";
			default:
				return "";
		}
	}
	public static text = ResClassTest2ResClassText;
}

export class Strings {
	public static test2 = ResClassTest2;
	static get test(): string {
		switch (CurrentLocale.locale) {
			case LocaleTypes.RuRu:
				return "Тест";
			case LocaleTypes.EnUs:
				return "Test";
			default:
				return "";
		}
	}
}

